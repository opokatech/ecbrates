# source files
SET(ECB_SOURCES

    Ecb.cpp
    Logging.cpp
    Server.cpp
    Timepoint.cpp
    Utils.cpp
    )

ADD_LIBRARY(ecb_lib ${ECB_SOURCES})
TARGET_INCLUDE_DIRECTORIES(ecb_lib PRIVATE ${EXTERNALS_INCLUDE_DIRS})
TARGET_LINK_LIBRARIES(ecb_lib ${EXTERNALS_LIBRARIES})
SET_PROPERTY(TARGET ecb_lib PROPERTY CXX_STANDARD 17)

# git stuff
FIND_PACKAGE(Git)

IF(GIT_EXECUTABLE)
    EXECUTE_PROCESS(COMMAND "${GIT_EXECUTABLE}" describe --always --abbrev=20 --dirty
        WORKING_DIRECTORY "${CMAKE_SOURCE_DIR}"
        OUTPUT_VARIABLE GIT_HASH
        ERROR_QUIET OUTPUT_STRIP_TRAILING_WHITESPACE)
    EXECUTE_PROCESS(COMMAND "${GIT_EXECUTABLE}" log -1 --format=%ad --date=iso
        WORKING_DIRECTORY "${CMAKE_SOURCE_DIR}"
        OUTPUT_VARIABLE GIT_DATE
        ERROR_QUIET OUTPUT_STRIP_TRAILING_WHITESPACE)
ENDIF()

CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/Version.cpp.in ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/Version.cpp)

ADD_EXECUTABLE(ecbrates Main.cpp "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/Version.cpp")
TARGET_INCLUDE_DIRECTORIES(ecbrates PRIVATE
    ${CXXOPTS_INCLUDE_DIRS} ${MONGOOSE_INCLUDE_DIRS} ${CMAKE_CURRENT_SOURCE_DIR})
TARGET_LINK_LIBRARIES(ecbrates PRIVATE ecb_lib)
SET_PROPERTY(TARGET ecbrates PROPERTY CXX_STANDARD 17)

ADD_CUSTOM_TARGET(strip
    COMMAND ${COMPILER_PREFIX}strip ${CMAKE_BINARY_DIR}/bin/ecbrates
    DEPENDS ecbrates
    )

